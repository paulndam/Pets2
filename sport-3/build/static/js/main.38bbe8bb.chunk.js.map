{"version":3,"sources":["components/UserForm.js","components/UserPage.js","components/GameForm.js","components/GameList.js","components/EditGame.js","components/Detail.js","App.js","serviceWorker.js","index.js"],"names":["UserForm","props","initialFirstname","initialLastname","initialEmail","initialPassword","onSubmitProp","useState","firstname","setfirstname","lastname","setlastname","email","setemail","password","setpassword","loginpassword","setloginpassword","loginemail","setloginemail","errors","seterrors","className","class","onSubmit","e","preventDefault","newUser","console","log","axios","post","withCredentials","then","res","data","navigate","_id","catch","error","for","type","id","aria-describedby","onChange","target","value","properties","message","user","setuser","setgame","io","useEffect","get","err","to","GameForm","initialName","initialType","initialDescription","initialSkills1","initialSkills2","initialSkills3","Name","setName","Type","setType","Description","setDescription","Skills1","setSkills1","Skills2","setSkills2","Skills3","setSkills3","newGame","pets","setpets","getallpets","Pets","scope","map","x","i","key","onClick","delete","EditGame","setPets","likes","App","u","path","y","UserPage","GameList","Detail","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.38bbe8bb.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { navigate } from \"@reach/router\";\nimport \"./form.css\";\n\nconst UserForm = (props) => {\n  // keeping track of what is being typed\n  const {\n    initialFirstname,\n    initialLastname,\n    initialEmail,\n    initialPassword,\n    onSubmitProp,\n  } = props;\n  const [firstname, setfirstname] = useState(initialFirstname);\n  const [lastname, setlastname] = useState(initialLastname);\n  const [email, setemail] = useState(initialEmail);\n  const [password, setpassword] = useState(initialPassword);\n  const [loginpassword, setloginpassword] = useState(\"\");\n  const [loginemail, setloginemail] = useState(\"\");\n  const [errors, seterrors] = useState([]);\n\n  // handle upon form submition\n  const create = (e) => {\n    e.preventDefault();\n    onSubmitProp({ firstname, lastname, email, password });\n    // props.addUser({ firstname, lastname });\n\n    const newUser = { firstname, lastname, email, password };\n    console.log(1, newUser);\n\n    setfirstname(\"\");\n    setlastname(\"\");\n    setemail(\"\");\n    setpassword(\"\");\n\n    //making post request to create a new person\n    axios\n      .post(\"http://localhost:8000/api/create\", newUser, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        console.log(\"I'm here\", res);\n        if (res.data.errors) {\n          seterrors(res.data.errors);\n        } else {\n          console.log(\"we are here !!!!!!\");\n          navigate(`/userpage/${res.data._id}`);\n        }\n      })\n      .catch((error) => console.log(error));\n    //   .then((res) => {\n    //     console.log(5, res);\n    //     if (res.data.errors) {\n    //       console.log(res.data.errors);\n    //     } else {\n    //       navigate(\"/\");\n    //     }\n    //   })\n    //   .catch((error) => {\n    //     console.log(error);\n    //     //this line below is getting error data from err.rspn.data\n    //     const errorResponse = error.response.data.errors;\n    //     //giving a temp err array or dict to store or push messages into\n    //     const errorArray = [];\n    //     //looping thru all the errors and getting the message\n    //     for (const x of Object.keys(errorResponse)) {\n    //       errorArray.push(errorResponse[x].message);\n    //     }\n    //     //then set the errors\n    //     seterrors(errorArray);\n    //   });\n  };\n\n  const login = (e) => {\n    e.preventDefault();\n\n    setloginpassword(\"\");\n    setloginemail(\"\");\n\n    axios\n      .post(\n        \"http://localhost:8000/api/login\",\n        { loginemail, loginpassword },\n        {\n          withCredentials: true,\n        }\n      )\n      .then((res) => {\n        console.log(res);\n        navigate(\"/gamesdashboard\");\n        seterrors(res.data.errors);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"jumbotron jumbotron-fluid\">\n        <h3>Welcome Animal Shelter</h3>\n      </div>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-4\">\n          <div className=\"card bg-light mb-3\">\n            <div className=\"card-header bg-warning\">Register</div>\n            <div class=\"card-body\">\n              <form onSubmit={create}>\n                {/* {errors.map((error, i) => (\n                  <p key={i}>{error}</p>\n                ))} */}\n                <div className=\"form-group\">\n                  <label for=\"firstname\">First name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"firstname\"\n                    aria-describedby=\"firstname\"\n                    onChange={(e) => setfirstname(e.target.value)}\n                    value={firstname}\n                  />\n                  {errors.firstname ? (\n                    <p className=\"text-danger\">\n                      {errors.firstname.properties.message}\n                    </p>\n                  ) : (\n                    \"\"\n                  )}\n\n                  <small\n                    id=\"firstname\"\n                    className=\"form-text text-muted\"\n                  ></small>\n                </div>\n\n                <div className=\"form-group\">\n                  <label for=\"lastname\">Last name</label>\n                  <input\n                    type=\"lastname\"\n                    className=\"form-control\"\n                    id=\"lastname\"\n                    aria-describedby=\"lastname\"\n                    onChange={(e) => setlastname(e.target.value)}\n                    value={lastname}\n                  />\n                  {errors.lastname ? (\n                    <p className=\"text-danger\">\n                      {errors.lastname.properties.message}\n                    </p>\n                  ) : (\n                    \"\"\n                  )}\n                  <small id=\"lastname\" className=\"form-text text-muted\"></small>\n                </div>\n\n                <div className=\"form-group\">\n                  <label for=\"email\">Email</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"email\"\n                    aria-describedby=\"email\"\n                    onChange={(e) => setemail(e.target.value)}\n                    value={email}\n                  />\n                  {errors.email ? (\n                    <p className=\"text-danger\">\n                      {errors.email.properties.message}\n                    </p>\n                  ) : (\n                    \"\"\n                  )}\n                  <small id=\"email\" className=\"form-text text-muted\"></small>\n                </div>\n\n                <div className=\"form-group\">\n                  <label for=\"password\">Password</label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    id=\"password\"\n                    aria-describedby=\"password\"\n                    onChange={(e) => setpassword(e.target.value)}\n                    value={password}\n                  />\n                  {errors.password ? (\n                    <p className=\"text-danger\">\n                      {errors.password.properties.message}\n                    </p>\n                  ) : (\n                    \"\"\n                  )}\n                  <small id=\"password\" className=\"form-text text-muted\"></small>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-outline-success\">\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-4\">\n          <div className=\"card bg-light mb-3\">\n            <div className=\"card-header bg-warning\">Log In</div>\n            <div class=\"card-body\">\n              <form onSubmit={login}>\n                <div className=\"form-group\">\n                  <label for=\"email\">Email</label>\n                  <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    id=\"email\"\n                    aria-describedby=\"email\"\n                    onChange={(e) => setloginemail(e.target.value)}\n                    value={loginemail}\n                  />\n                  {errors.loginemail ? (\n                    <p className=\"text-danger\">\n                      {errors.loginemail.properties.message}\n                    </p>\n                  ) : (\n                    \"\"\n                  )}\n                  <small id=\"email\" className=\"form-text text-muted\"></small>\n                </div>\n\n                <div className=\"form-group\">\n                  <label for=\"password\">Password</label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    id=\"password\"\n                    aria-describedby=\"password\"\n                    onChange={(e) => setloginpassword(e.target.value)}\n                    value={loginpassword}\n                  />\n                  {errors.loginpassword ? (\n                    <p className=\"text-danger\">\n                      {errors.loginpassword.properties.message}\n                    </p>\n                  ) : (\n                    \"\"\n                  )}\n                  <small id=\"password\" className=\"form-text text-muted\"></small>\n                </div>\n                <button type=\"submit\" className=\"btn btn-outline-success\">\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserForm;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Link } from \"@reach/router\";\nimport \"./userpage.css\";\nimport io from \"socket.io-client\";\nimport { navigate } from \"@reach/router\";\n\nexport default (props) => {\n  const [user, setuser] = useState({});\n  const [game, setgame] = useState({});\n  //passing callback function to initialize socket\n  const [socket] = useState(() => io(\":8000\"));\n  useEffect((_id) => {\n    console.log(\"RIIIICCCCOOOOO\");\n    console.log(props._id);\n    axios\n      .get(\"http://localhost:8000/api/singleuser/\" + props._id)\n      .then((res) => {\n        console.log(res);\n        setuser(res.data);\n        setgame(res.data);\n      })\n      .catch((err) => console.log(err));\n    //setting up our event listeners\n    // console.log(\"Is this running?\");\n    // socket.on(\"Welcome, Rico welcome's you\", (data) => console.log(data));\n    // return () => socket.disconnect(true);\n  }, []);\n\n  // useEffect(() => {\n  //   console.log(\"Is this running?\");\n  //   socket.on(\"Welcome, Rico welcome's you\", (data) => console.log(data));\n  //   return () => socket.disconnect(true);\n  // });\n\n  // useEffect(() => {\n  //   console.log(\"TIIIICCCCOOOOO\");\n  //   console.log(props._id);\n  //   axios\n  //     .get(\"http://localhost:8000/api/onegame/\" + props._id)\n  //     .then((res) => {\n  //       console.log(res);\n  //       setgame(res.data);\n  //       setuser(res.data);\n  //     })\n  //     .catch((err) => console.log(err));\n  // }, []);\n\n  const removeUser = (_id) => {\n    console.log(_id);\n    axios\n      .delete(`http://localhost:/8000/api/singleuser/${_id}`)\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const theLogedInUser = () => {\n    axios\n      .get(\"http://localhost:8000/api/user/userlogin\", {\n        withCredentials: true,\n      })\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8000/api/singleuser/\" + props._id, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        setuser(res.data);\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(\"not authorized\");\n        console.log(err);\n\n        navigate(\"/\");\n      });\n  }, []);\n\n  return (\n    <div className=\"container-fluid\">\n      <div class=\"row justify-content-start\">\n        <div className=\"col\">\n          <div className=\"card bg-dark text-white\">\n            <div className=\"card-header\">Hello {user.firstname}</div>\n            <div className=\"card-body\">\n              <p>last name: {user.lastname}</p>\n              {/* <Link\n                className=\"btn btn-outline-warning\"\n                to={`/edit/${user._id}`}\n              >\n                Edit\n              </Link>\n              <button\n                className=\"btn btn-outline-danger float-right\"\n                onClick={(e) => removeUser(user._id)}\n              >\n                Remove\n              </button> */}\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <Link\n            className=\"class=btn btn-primary btn-sm\"\n            type=\"button\"\n            to={\"/createpet\"}\n          >\n            Add Pet\n          </Link>\n\n          <Link\n            className=\"class=btn btn-info btn-sm\"\n            type=\"button\"\n            to={\"/petsdashboard\"}\n          >\n            All Pets\n          </Link>\n        </div>\n      </div>\n\n      <div className=\"row justify-content-around\">\n        <div id=\"colone\" className=\"col\">\n          <table className=\"table\">\n            <thead className=\"thead-dark\">\n              <tr>\n                {/* <th scope=\"col\">Home Team</th>\n                <th scope=\"col\">Away Team</th>\n                <th scope=\"col\">Description</th>\n                <th scope=\"col\">Duration</th>\n                <th scope=\"col\">Units</th> */}\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                {/* <td>{game.TeamOneName}</td>\n                <td>{game.TeamTwoName}</td>\n                <td>{game.Description}</td>\n                <td>{game.Duration}</td>\n                <td>{game.Units}</td> */}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { navigate } from \"@reach/router\";\nimport \"./form.css\";\n\nconst GameForm = (props) => {\n  const {\n    initialName,\n    initialType,\n    initialDescription,\n    initialSkills1,\n    initialSkills2,\n    initialSkills3,\n    onSubmitProp,\n  } = props;\n\n  const [Name, setName] = useState(initialName);\n  const [Type, setType] = useState(initialType);\n  const [Description, setDescription] = useState(initialDescription);\n  const [Skills1, setSkills1] = useState(initialSkills1);\n  const [Skills2, setSkills2] = useState(initialSkills2);\n  const [Skills3, setSkills3] = useState(initialSkills3);\n  const [errors, seterrors] = useState([]);\n\n  const createpet = (e) => {\n    e.preventDefault();\n    onSubmitProp({ Name, Type, Description, Skills1, Skills2 });\n    const newGame = { Name, Type, Description, Skills1, Skills2, Skills3 };\n    console.log(1, newGame);\n\n    setName(\"\");\n    setType(\"\");\n    setDescription(\"\");\n    setSkills1(\"\");\n    setSkills2(\"\");\n    setSkills3(\"\");\n\n    axios\n      .post(\"http://localhost:8000/api/createPet\", newGame)\n      .then((res) => {\n        console.log(res);\n        if (res.data.errors) {\n          seterrors(res.data.errors);\n        } else {\n          navigate(`/userpage/${props._id}`);\n          navigate(\"/petsdashboard\");\n        }\n      })\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"jumbotron jumbotron-fluid\">\n        <h3>Let's Adopt</h3>\n      </div>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-4\">\n          <div className=\"card bg-light mb-3\">\n            <div className=\"card-header bg-warning\">Add Pet</div>\n            <div class=\"card-body\">\n              <form className=\"col-sm-8 offset-sm-2\" onSubmit={createpet}>\n                {/* {errors.map((error, i) => (\n                  <p key={i}>{error}</p>\n                ))} */}\n                <div className=\"form-group\">\n                  <label for=\"Name\">Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"Name\"\n                    aria-describedby=\"Name\"\n                    onChange={(e) => setName(e.target.value)}\n                    // value={Name}\n                  />\n                  {errors.Name ? (\n                    <p className=\"text-danger\">\n                      {errors.Name.properties.message}\n                    </p>\n                  ) : (\n                    \"\"\n                  )}\n\n                  <small id=\"Name\" className=\"form-text text-muted\"></small>\n                </div>\n\n                <div className=\"form-group\">\n                  <label for=\"Type\">Type</label>\n                  <input\n                    type=\"Type\"\n                    className=\"form-control\"\n                    id=\"Type\"\n                    aria-describedby=\"Type\"\n                    onChange={(e) => setType(e.target.value)}\n                    // value={Type}\n                  />\n                  {errors.Type ? (\n                    <p className=\"text-danger\">\n                      {errors.Type.properties.message}\n                    </p>\n                  ) : (\n                    \"\"\n                  )}\n                  <small id=\"Type\" className=\"form-text text-muted\"></small>\n                </div>\n\n                <div className=\"form-group\">\n                  <label for=\"Description\">Description</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"Description\"\n                    aria-describedby=\"Description\"\n                    onChange={(e) => setDescription(e.target.value)}\n                    // value={Description}\n                  />\n                  {errors.Description ? (\n                    <p className=\"text-danger\">\n                      {errors.Description.properties.message}\n                    </p>\n                  ) : (\n                    \"\"\n                  )}\n                  <small\n                    id=\"Description\"\n                    className=\"form-text text-muted\"\n                  ></small>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col-sm-12\">\n                    <div className=\"form-group\">\n                      <label for=\"Skills1\">Skills1</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"Skills1\"\n                        aria-describedby=\"Skills1\"\n                        onChange={(e) => setSkills1(e.target.value)}\n                        // value={Skills1}\n                      />\n                      {errors.Skills1 ? (\n                        <p className=\"text-danger\">\n                          {errors.Skills1.properties.message}\n                        </p>\n                      ) : (\n                        \"\"\n                      )}\n                      <small\n                        id=\"Skills1\"\n                        className=\"form-text text-muted\"\n                      ></small>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col-sm-12\">\n                    <div className=\"form-group\">\n                      <label for=\"Skills2\">Skills2</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"Skills2\"\n                        aria-describedby=\"Skills2\"\n                        onChange={(e) => setSkills2(e.target.value)}\n                        // value={Skills2}\n                      />\n                      {errors.Skills2 ? (\n                        <p className=\"text-danger\">\n                          {errors.Skills2.properties.message}\n                        </p>\n                      ) : (\n                        \"\"\n                      )}\n                      <small\n                        id=\"Skills2\"\n                        className=\"form-text text-muted\"\n                      ></small>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col-sm-12\">\n                    <div className=\"form-group\">\n                      <label for=\"Skills3\">Skills3</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"Skills3\"\n                        aria-describedby=\"Skills3\"\n                        onChange={(e) => setSkills3(e.target.value)}\n                        // value={Skills3}\n                      />\n                      {errors.Skills3 ? (\n                        <p className=\"text-danger\">\n                          {errors.Skills3.properties.message}\n                        </p>\n                      ) : (\n                        \"\"\n                      )}\n                      <small\n                        id=\"Skills3\"\n                        className=\"form-text text-muted\"\n                      ></small>\n                    </div>\n                  </div>\n                </div>\n\n                {/* <div className=\"col-sm-12\">\n                  <div className=\"form-group\">\n                    <label>Units</label>\n                    <select\n                      className=\"form-control\"\n                      onChange={(e) => setUnits(e.target.value)}\n                    >\n                      <option>minutes</option>\n                      <option>hours</option>\n                      <option>days</option>\n                    </select>\n                  </div>\n                </div> */}\n\n                <button type=\"submit\" className=\"btn btn-outline-success\">\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GameForm;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"@reach/router\";\n\nexport default (props) => {\n  const [pets, setpets] = useState([]);\n\n  const getallpets = () => {\n    axios\n      .get(\"http://localhost:8000/api/allPets\")\n      .then((res) => {\n        console.log(res);\n        setpets(res.data.Pets);\n      })\n      .catch((err) => console.log(err));\n  };\n  useEffect(() => {\n    getallpets();\n  }, []);\n\n  const removePet = (_id) => {\n    console.log(_id);\n    axios\n      .delete(`http://localhost:8000/api/allPets/delete/${_id}`)\n      .then((res) => {\n        console.log(res);\n        getallpets();\n      })\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row justify-content-around\">\n        <div id=\"colone\" className=\"col\">\n          <div className=\"\">\n            <Link\n              className=\"class=btn btn-primary btn-sm\"\n              type=\"button\"\n              to={\"/createpet\"}\n            >\n              Add Pet\n            </Link>\n          </div>\n          <table className=\"table\">\n            <thead className=\"thead-dark\">\n              <tr>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Type</th>\n                <th scope=\"col\">Description</th>\n\n                <th scope=\"col\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {pets.map((x, i) => (\n                <tr key={x._id}>\n                  <td>{x.Name}</td>\n                  <td>{x.Type}</td>\n                  <td>{x.Description}</td>\n                  {/* <td>{x.Duration}</td>\n                  <td>{x.Units}</td> */}\n                  <Link\n                    className=\"btn btn-outline-warning\"\n                    to={`/edit/${x._id}`}\n                  >\n                    Edit\n                  </Link>\n                  <Link\n                    className=\"btn btn-outline-primary\"\n                    to={`/details/${x._id}`}\n                  >\n                    details\n                  </Link>\n                  <button\n                    className=\"btn btn-outline-danger float-right\"\n                    onClick={(e) => removePet(x._id)}\n                  >\n                    Adopt\n                  </button>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { navigate } from \"@reach/router\";\nimport moment from \"moment\";\n\nconst EditGame = (props) => {\n  //   const { _id } = props;\n  //   const [game, setgame] = useState();\n  //const [errors, seterrors] = useState({});\n  //const [loaded, setLoaded] = useState(false);\n\n  //   useEffect(() => {\n  //     axios\n  //       .get(`http://localhost:8000/api/allgames/${props._id}`)\n  //       .then((res) => {\n  //         console.log(res);\n  //         setgame(res.data.games);\n  //         setLoaded(true);\n  //       })\n  //       .catch((error) => console.log(error));\n  //   }, [props._id]);\n\n  //   const updateGame = (game) => {\n  //     axios\n  //       .put(`http://localhost:8000/api/allgames/update/${props._id}`, game)\n  //       .then((res) => {\n  //         console.log(res);\n  //         if (res.data.errors) {\n  //           seterrors(res.data.errors);\n  //         } else {\n  //           navigate(\"/gamesdashboard\");\n  //         }\n  //       })\n  //       .catch((error) => console.log(error));\n  //   };\n\n  const [Name, setName] = useState(\"\");\n  const [Type, setType] = useState(\"\");\n  const [Description, setDescription] = useState(\"\");\n  const [Skills1, setSkills1] = useState(\"\");\n  const [Skills2, setSkills2] = useState(\"\");\n  const [Skills3, setSkills3] = useState(\"\");\n  const [errors, seterrors] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:8000/api/onePet/${props._id}`)\n      .then((res) => {\n        console.log(res);\n        setName(res.data.Name);\n        setType(res.data.Type);\n        setDescription(res.data.Description);\n        setSkills1(res.data.Skills1);\n        setSkills2(res.data.Skills2);\n        setSkills3(res.data.Skills3);\n      })\n      .catch((errors) => console.log(errors.message));\n  }, [props._id]);\n\n  //method to update\n\n  const updatePet = (e) => {\n    e.preventDefault();\n    const gamex = { Name, Type, Description, Skills1, Skills2, Skills3 };\n    console.log(\"the pur request route below\");\n    console.log(`http://localhost:8000/api/allPets/update/${props._id}`);\n    axios\n      .put(`http://localhost:8000/api/allPets/update/${props._id}`, gamex)\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          seterrors(res.data.error.errors);\n        } else {\n          navigate(\"/petsdashboard\");\n        }\n      })\n      .catch((error) => console.log(errors.message));\n  };\n\n  const removeGame = () => {\n    axios\n      .delete(`http://localhost:8000/api/allPets/delete/${props._id}`)\n      .then((res) => {\n        console.log(res);\n        navigate(\"/petsdashboard\");\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    // <div className=\"container-fluid\">\n    //   {loaded && (\n    //     <GameForm\n    //       onSubmitProp=\"updatePet\"\n    //       initialName={game.Name}\n    //       initialType={game.Type}\n    //       initialDescription={game.Description}\n    //       initialSkills1={game.Skills1}\n    //       initialSkills2={game.Skills2}\n    //     />\n    //   )}\n    // </div>\n    <div className=\"container-fluid\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-4\">\n          <div className=\"card bg-light mb-3\">\n            <div className=\"card-header bg-warning\">Update Game</div>\n            <div class=\"card-body\">\n              <form className=\"col-sm-8 offset-sm-2\" onSubmit={updatePet}>\n                {/* {errors.map((error, i) => (\n                  <p key={i}>{error}</p>\n                ))} */}\n                <div className=\"form-group\">\n                  <label for=\"Name\">Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"Name\"\n                    aria-describedby=\"Name\"\n                    onChange={(e) => setName(e.target.value)}\n                    value={Name}\n                  />\n                  {errors.Name ? (\n                    <p className=\"text-danger\">\n                      {errors.Name.properties.message}\n                    </p>\n                  ) : (\n                    \"\"\n                  )}\n\n                  <small id=\"Name\" className=\"form-text text-muted\"></small>\n                </div>\n\n                <div className=\"form-group\">\n                  <label for=\"Type\">Type</label>\n                  <input\n                    type=\"Type\"\n                    className=\"form-control\"\n                    id=\"Type\"\n                    aria-describedby=\"Type\"\n                    onChange={(e) => setType(e.target.value)}\n                    value={Type}\n                  />\n                  {errors.Type ? (\n                    <p className=\"text-danger\">\n                      {errors.Type.properties.message}\n                    </p>\n                  ) : (\n                    \"\"\n                  )}\n                  <small id=\"Type\" className=\"form-text text-muted\"></small>\n                </div>\n\n                <div className=\"form-group\">\n                  <label for=\"Description\">Description</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"Description\"\n                    aria-describedby=\"Description\"\n                    onChange={(e) => setDescription(e.target.value)}\n                    value={Description}\n                  />\n                  {errors.Description ? (\n                    <p className=\"text-danger\">\n                      {errors.Description.properties.message}\n                    </p>\n                  ) : (\n                    \"\"\n                  )}\n                  <small\n                    id=\"Description\"\n                    className=\"form-text text-muted\"\n                  ></small>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col-sm-12\">\n                    <div className=\"form-group\">\n                      <label for=\"Skills1\">Skills1</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"Skills1\"\n                        aria-describedby=\"Skills1\"\n                        onChange={(e) => setSkills1(e.target.value)}\n                        value={Skills1}\n                      />\n                      {errors.Skills1 ? (\n                        <p className=\"text-danger\">\n                          {errors.Skills1.properties.message}\n                        </p>\n                      ) : (\n                        \"\"\n                      )}\n                      <small\n                        id=\"Skills1\"\n                        className=\"form-text text-muted\"\n                      ></small>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col-sm-12\">\n                    <div className=\"form-group\">\n                      <label for=\"Skills2\">Skills2</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"Skills2\"\n                        aria-describedby=\"Skills2\"\n                        onChange={(e) => setSkills2(e.target.value)}\n                        value={Skills2}\n                      />\n                      {errors.Skills2 ? (\n                        <p className=\"text-danger\">\n                          {errors.Skills2.properties.message}\n                        </p>\n                      ) : (\n                        \"\"\n                      )}\n                      <small\n                        id=\"Skills2\"\n                        className=\"form-text text-muted\"\n                      ></small>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col-sm-12\">\n                    <div className=\"form-group\">\n                      <label for=\"Skills3\">Skills3</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"Skills3\"\n                        aria-describedby=\"Skills3\"\n                        onChange={(e) => setSkills3(e.target.value)}\n                        value={Skills3}\n                      />\n                      {errors.Skills3 ? (\n                        <p className=\"text-danger\">\n                          {errors.Skills3.properties.message}\n                        </p>\n                      ) : (\n                        \"\"\n                      )}\n                      <small\n                        id=\"Skills3\"\n                        className=\"form-text text-muted\"\n                      ></small>\n                    </div>\n                  </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-outline-success\">\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditGame;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Link } from \"@reach/router\";\nimport \"./userpage.css\";\nimport io from \"socket.io-client\";\nimport { navigate } from \"@reach/router\";\n\nexport default (props) => {\n  const [Pets, setPets] = useState({});\n  //const [game, setgame] = useState({});\n  //passing callback function to initialize socket\n  const [socket] = useState(() => io(\":8000\"));\n  useEffect((_id) => {\n    console.log(\"RIIIICCCCOOOOO\");\n    console.log(props._id);\n    axios\n      .get(\"http://localhost:8000/api/onePet/\" + props._id)\n      .then((res) => {\n        console.log(res);\n        setPets(res.data);\n      })\n      .catch((err) => console.log(err));\n    //setting up our event listeners\n    // console.log(\"Is this running?\");\n    // socket.on(\"Welcome, Rico welcome's you\", (data) => console.log(data));\n    // return () => socket.disconnect(true);\n  }, []);\n\n  //   useEffect(() => {\n  //     console.log(\"Is this running?\");\n  //     socket.on(\"Welcome, Rico welcome's you\", (data) => console.log(data));\n  //     return () => socket.disconnect(true);\n  //   });\n\n  // useEffect(() => {\n  //   console.log(\"TIIIICCCCOOOOO\");\n  //   console.log(props._id);\n  //   axios\n  //     .get(\"http://localhost:8000/api/onegame/\" + props._id)\n  //     .then((res) => {\n  //       console.log(res);\n  //       setgame(res.data);\n  //       setPets(res.data);\n  //     })\n  //     .catch((err) => console.log(err));\n  // }, []);\n\n  const removePets = (e) => {\n    console.log();\n    axios\n      .delete(`http://localhost:8000/api/allPets/delete/${props._id}`)\n      .then((res) => {\n        console.log(res);\n        navigate(\"/petsdashboard\");\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const like = 0;\n  function newLike() {\n    return like++;\n  }\n\n  const Like = (likes) => {\n    likes = 0;\n    return likes++;\n  };\n  //   const theLogedInPets = () => {\n  //     axios\n  //       .get(\"http://localhost:8000/api/Pets/Petslogin\", {\n  //         withCredentials: true,\n  //       })\n  //       .then((res) => {\n  //         console.log(res);\n  //       })\n  //       .catch((err) => console.log(err));\n  //   };\n\n  //   useEffect(() => {\n  //     axios\n  //       .get(\"http://localhost:8000/api/singlePets/\" + props._id, {\n  //         withCredentials: true,\n  //       })\n  //       .then((res) => {\n  //         setPets(res.data);\n  //         console.log(res);\n  //       })\n  //       .catch((err) => {\n  //         console.log(\"not authorized\");\n  //         console.log(err);\n\n  //         navigate(\"/\");\n  //       });\n  //   }, []);\n\n  return (\n    <div className=\"container-fluid\">\n      <div class=\"row justify-content-start\">\n        <div className=\"col\">\n          <div className=\"card bg-dark text-white\">\n            <div className=\"card-header\">Details About {Pets.Name}</div>\n            <div className=\"card-body\">\n              <p>Pet Type: {Pets.Type}</p>\n              <p>Pet Description: {Pets.Description}</p>\n              <p>Pet Skills1: {Pets.Skills1}</p>\n              <p>Pet Skills2: {Pets.Skills2}</p>\n              <p>Pet Skills3: {Pets.Skills3}</p>\n\n              {/* <Link\n                className=\"btn btn-outline-warning\"\n                to={`/edit/${Pets._id}`}\n              >\n                Edit\n              </Link>\n              <button\n                className=\"btn btn-outline-danger float-right\"\n                onClick={(e) => removePets(Pets._id)}\n              >\n                Remove\n              </button> */}\n              <div className=\"card-title\">\n                <button\n                  className=\"btn btn-outline-warning float-right\"\n                  onClick={(e) => removePets()}\n                >\n                  Adopt\n                </button>\n              </div>\n\n              <div className=\"card-title\">\n                <button\n                  className=\"btn btn-outline-warning float-right\"\n                  onClick={(e) => Like()}\n                >\n                  like\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <Link\n            className=\"class=btn btn-primary btn-sm\"\n            type=\"button\"\n            to={\"/createpet\"}\n          >\n            Add Pet\n          </Link>\n\n          <Link\n            className=\"class=btn btn-info btn-sm\"\n            type=\"button\"\n            to={\"/petsdashboard\"}\n          >\n            All Pets\n          </Link>\n        </div>\n      </div>\n\n      <div className=\"row justify-content-around\">\n        <div id=\"colone\" className=\"col\">\n          <table className=\"table\">\n            <thead className=\"thead-dark\">\n              <tr>\n                {/* <th scope=\"col\">Home Team</th>\n                <th scope=\"col\">Away Team</th>\n                <th scope=\"col\">Description</th>\n                <th scope=\"col\">Duration</th>\n                <th scope=\"col\">Units</th> */}\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                {/* <td>{game.TeamOneName}</td>\n                <td>{game.TeamTwoName}</td>\n                <td>{game.Description}</td>\n                <td>{game.Duration}</td>\n                <td>{game.Units}</td> */}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport UserForm from \"./components/UserForm.js\";\nimport UserPage from \"./components/UserPage.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Router, Link } from \"@reach/router\";\nimport \"./App.css\";\nimport GameForm from \"./components/GameForm.js\";\nimport GameList from \"./components/GameList.js\";\nimport EditGame from \"./components/EditGame.js\";\nimport Detail from \"./components/Detail.js\";\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <Link to=\"/userpage/:_id\"></Link>\n      <Router>\n        <UserForm onSubmitProp={(u) => console.log(u)} path=\"/\" />\n        <GameForm onSubmitProp={(y) => console.log(y)} path=\"/createpet\" />\n        <UserPage path=\"/userpage/:_id\" />\n        <GameList path=\"/petsdashboard\" />\n        <EditGame path=\"/edit/:_id\" />\n        <Detail path=\"/details/:_id\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}